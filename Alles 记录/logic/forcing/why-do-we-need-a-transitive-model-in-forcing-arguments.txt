forcing can be done without a countable model at all, using either the syntactic approach or an approach via Boolean-valued models


https://mathoverflow.net/questions/244214/why-do-we-need-a-transitive-model-in-forcing-arguments
Countability is clearly used in order to find the generic filter. Strictly speaking, one doesn't need that the entire model is countable, but rather only that the model M has only countably many dense subsets of the forcing notion P being used for the forcing. For example, one can easily find generic filters for any forcing notion in an ω1-like model, which is an uncountable model all of whose rank initial segments are countable. More generally, it suffices if there are only countably many maximal antichains for the forcing, since meeting these suffices for genericity. One can relax this a bit in certain cases. For example, if you have Martin's axiom or some other forcing axiom, and if M has fewer than continuum many open dense sets for a forcing notion P that happens to be ccc in the ambiant universe, then it will be instance of the forcing axiom to know that there is an M-generic filter. And similarly with proper forcing and PFA and so on. So these are some ways in which you can dispense with the countability assumption and still get a generic filter.

Transitivity. The use of transitivity in the CTM approach to forcing is used critically in the definition of what M[G] is. Namely, one usually defines M[G] to consists of all the interpretations of names τ in M by G, defining the value
val(τ,G)={val(σ,G)∣∃p∈G ⟨σ,p⟩∈τ}.
This definition takes place by ∈-induction in a realm where both M and G exist. One cannot seem to carry out this induction on names if the model is not ∈-standard or at least well-founded, and so this is the main point of failure with the usual CTM approach to forcing. Without transitivity or at least well-foundedness, we don't seem to know exactly what M[G] should mean. This problem is addressed in the Boolean-valued model quotient construction by defining M[G] as a quotient by an equivalence relation, rather than by the ∈-inductive value procedure. Furthermore, if G is M-generic for a non-well-founded model M, then indeed after forming the model M[G] by the quotient construction MB/G, then inside M[G] one can see that it arises internally via the values-of-names construction. But the point is that without having first provided an alternative definition of what M[G] is, one doesn't seem at first able to carry out that name-value process, because the induction takes place in context with both M and G already available. (And this subtle point, I believe, seems to be the answer to your question as updated by the revision.)
