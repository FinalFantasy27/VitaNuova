作者：超滤空间
链接：https://zhuanlan.zhihu.com/p/33944857
来源：知乎
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。

上述定义中，最后一句话中的“第一个变元”指的是在变元序列 v_0, v_1, ..., v_k, ... 中满足相应条件的第一个变元；下文中出现的“第一个变元”也按这种方式理解，不再赘述。

这种优雅的处理“代入”的方式源自 Ebbinghaus, Flum, Thomas 著 Mathematical Logic；它的特色是在“量词”的情况，如果代入不是“可自由代入的”，直接进行“易字”保证代入的可自由代入性。这么做的好处是省去了定义“可自由代入”这一步骤（对于另一种处理代入的方式，即先直接代进去、再讨论“可自由代入”的方式，参见徐明著《符号逻辑讲义》）；这么做的另一个好处是，不需要再定义“规范易字变形”这一概念（在上面提及的另一种处理代入的方式中，如果代入不是“可自由代入的”，我们可以通过一种典范的方式得到被带入公式的一个“规范易字变形”，使得代入对这个“规范易字变形”是“可自由代入的”）。也就是说，这种处理方式中的所有代入都是“可自由代入的”，没有“不可自由代入”的代入。

对于我们使用的记法，即把“代入”写在被代入公式的左边，源自 Bourbaki 著 Theory of Sets；Church 著 Introduction to Mathematical Logic 也是把代入写在被带入公式的左边。这种记法的好处是，使元系统中的“缩写”记法具有唯一可读性：如果我们把代入写在右边，比如 ∈xx (x / y)，我们就有可能不知道我们想要表达的是 (∈xx) (x / y) 还是 ∈x(x (x / y))。虽然我们不需要证明这种“唯一可读性”（因为元系统不是我们的研究对象；证明形式语言的唯一可读性是为了保证像“自由出现”、“代入”这种语法概念的递归定义的合理性，而我们不会在元系统的符号串上做递归定义），在引入“缩写”记法的时候，我们还是尽可能地保证“唯一可读性”，以使读者能够正确地理解我们想要表达的意思。

前一段提到的两本书都不是通过递归的方式来定义“代入”的。如果我们也不采纳递归的方式，会有如下的“灾难”：